@model Presentation_Layer.ViewModels.SurveyViewModel

<div class="form-group" id="questionDiv_@Model.Id">
    @for (var i = 0; i < Model.Questions.Count; i++)
    {
        @Html.LabelFor(model => model.Questions[i].Body)
        @Html.TextAreaFor(model => model.Questions[i].Body, new { @class = "form-control" })
        @Html.LabelFor(model => model.Questions[i].Coefficient)
        @Html.TextBoxFor(model => model.Questions[i].Coefficient, new { @class = "form-control", type = "number", min = "0.2", step = "0.2", max = "1" })
        @Html.ValidationMessageFor(model => model.Questions[i].Body, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Questions[i].Coefficient, "", new { @class = "text-danger" })
        @Html.HiddenFor(model=>Model.Questions[i].Id)
        <div class="ml-3" id="OptionsSection_@Model.Questions[i].Id">
            @await Html.PartialAsync("PartialViews/_QuestionOptionsPartial", Model.Questions[i])
        </div>
    }

    <button type="button" onclick="addNewQuestion(@Model.Questions.Count, '@Model.Id');">+</button>
</div>

<script>
        
        let valdata = $("#questionDiv_" + id + " :input").serialize();
            $.ajax({
                url: "/Survey/AddNewQuestion",
                type: "POST",
                data: 
                {
                    viewModel: valdata,
                    newValue: oldValue + 1
                }
            })
                .done(function (response) {
                    $("#QuestionSection").html(response);
                })
                .fail(function () {
                    alert('Fail');
                });
        }
    </script>